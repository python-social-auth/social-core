[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools>=78.0.2"]

[dependency-groups]
dev = [
  "coverage>=3.6",
  "flake8>=5.0.4",
  "google-auth-stubs==0.3.0",
  "mypy==1.15.0",
  "pyright==1.1.400",
  "pytest-cov>=2.7.1",
  "pytest-xdist>=3.6.1",
  "pytest>=4.5",
  "responses==0.25.7",
  "types-defusedxml==0.7.0.20240218",
  "types-oauthlib==3.2.0.20250408",
  "types-python-jose==3.4.0.20250224",
  "types-requests-oauthlib==2.0.0.20250306",
  "types-requests==2.32.0.20250328"
]

[project]
authors = [
  {email = "matiasaguirre@gmail.com", name = "Matias Aguirre"},
  {email = "michal@weblate.org", name = "Michal Čihař"}
]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Environment :: Web Environment",
  "Intended Audience :: Developers",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python",
  "Topic :: Internet"
]
dependencies = [
  "cryptography>=1.4",
  "defusedxml>=0.5.0",
  "oauthlib>=1.0.3",
  "PyJWT>=2.7.0",
  "python3-openid>=3.0.10",
  "requests-oauthlib>=0.6.1",
  "requests>=2.9.1"
]
description = "Python social authentication made simple."
keywords = ["oauth", "openid", "saml", "social auth"]
license = "BSD-3-Clause"
license-files = ["LICENSE"]
name = "social-auth-core"
readme = "README.md"
requires-python = ">=3.9"
version = "4.6.1"

[project.optional-dependencies]
all = [
  "social-auth-core[azuread]",
  "social-auth-core[google-onetap]",
  "social-auth-core[saml]",
  "social-auth-core[shopify]"
]
allpy3 = [
  "social-auth-core[all]"
]
azuread = [
  "cryptography>=2.1.1"
]
# This is present until pip implements supports for PEP 735
# see https://github.com/pypa/pip/issues/12963
dev = [
  "coverage>=3.6",
  "flake8>=5.0.4",
  "google-auth-stubs==0.3.0",
  "mypy==1.15.0",
  "pyright==1.1.400",
  "pytest-cov>=2.7.1",
  "pytest-xdist>=3.6.1",
  "pytest>=4.5",
  "responses==0.25.7",
  "types-defusedxml==0.7.0.20240218",
  "types-oauthlib==3.2.0.20250408",
  "types-python-jose==3.4.0.20250224",
  "types-requests-oauthlib==2.0.0.20250306",
  "types-requests==2.32.0.20250328"
]
google-onetap = [
  "google-auth~=2.39.0"
]
ping = [
  "python-jose>=3.4.0,<4.0"
]
saml = [
  "python3-saml>=1.5.0"
]
shopify = [
  "ShopifyAPI"
]

[project.urls]
Homepage = "https://github.com/python-social-auth/social-core"

[tool.check-manifest]
ignore = [
  ".coveragerc",
  ".pre-commit-config.yaml",
  ".well-known/funding-manifest-urls",
  "tox.ini"
]

[tool.codespell]
count = true
ignore-words-list = "assertIn"

[tool.mypy]
check_untyped_defs = true

[[tool.mypy.overrides]]
disallow_untyped_defs = true
ignore_missing_imports = true
module = [
  "google.appengine.*",
  "onelogin.*",
  "openid.*",
  "shopify.*"
]

[tool.pyright]
executionEnvironments = [
  {reportMissingImports = "none", root = "social_core/backends/gae.py"}
]
pythonVersion = "3.9"
reportOptionalMemberAccess = "none"
reportPossiblyUnboundVariable = "none"

[tool.ruff.lint]
extend-safe-fixes = [
  "ANN",
  "D",
  "FA102",
  "FLY",
  "SIM",
  "TCH",
  "UP"
]
ignore = [
  "A001",  # TODO: Variable is shadowing a Python builtin
  "A002",  # TODO: Function argument is shadowing a Python builtin
  "ANN",  # TODO: Missing type annotations
  "ARG001",  # TODO: Unused function argument (mostly for API compatibility)
  "ARG002",  # TODO: Unused method argument (mostly for API compatibility)
  "ARG003",  # TODO: Unused class method argument
  "ARG005",  # TODO: Unused lambda argument
  "B018",  # TODO: Found useless expression.
  "B026",  # TODO: Star-arg unpacking after a keyword argument is strongly discouraged
  "B904",  # TODO: use raise from
  "BLE001",  # TODO: Do not catch blind exception: `Exception`
  "COM",  # CONFIG: No trailing commas
  "D",  # TODO: Missing documentation
  "D203",  # CONFIG: incompatible with D211
  "D212",  # CONFIG: incompatible with D213
  "DTZ001",  # TODO: `datetime.datetime()` called without a `tzinfo` argument
  "DTZ005",  # TODO: `datetime.datetime.now()` called without a `tz` argument
  "E501",  # WONTFIX: we accept long strings (rest is formatted by ruff)
  "EM101",  # TODO: Exception must not use a string literal, assign to variable first
  "EM102",  # TODO: Exception must not use an f-string literal, assign to variable first
  "ERA001",  # TODO: Found commented-out code
  "FBT",  # TODO: Boolean in function definition
  "FIX002",  # CONFIG: we use TODO
  "ISC003",  # TODO: Explicitly concatenated string should be implicitly concatenated
  "N",  # TODO: Naming issues
  "PERF203",  # WONTFIX: This rule is only enforced for Python versions prior to 3.11
  "PLR2004",  # TODO: Magic value used in comparison
  "PLW0603",  # TODO: Using the global statement to update `BACKENDSCACHE` is discouraged
  "PLW2901",  # TODO: loop variable overwritten by assignment target
  "PT",  # CONFIG: Not using pytest
  "RUF012",  # TODO: Type annotations
  "S101",  # TODO: Use of `assert` detected
  "S105",  # TODO: Possible hardcoded password assigned
  "S110",  # TODO: `try`-`except`-`pass` detected, consider logging the exception
  "S301",  # TODO: `pickle` and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue
  "S318",  # TODO: Using `xml` to parse untrusted data is known to be vulnerable to XML attacks; use `defusedxml` equivalents
  "TD002",  # CONFIG: no detailed TODO documentation is required
  "TD003",  # CONFIG: no detailed TODO documentation is required
  "TID252",  # TODO: Prefer absolute imports over relative imports from parent modules
  "TRY003",  # TODO: Avoid specifying long messages outside the exception class
  "TRY301",  # TODO: Abstract `raise` to an inner function
  'ISC001'  # CONFIG: formatter
]
select = ["ALL"]

[tool.ruff.lint.mccabe]
max-complexity = 11  # TODO: should be lower

[tool.ruff.lint.per-file-ignores]
"social_core/pipeline/debug.py" = ["T201", "T203"]

[tool.ruff.lint.pylint]
# TODO: all these should be lower (or use defaults)
max-args = 7
max-branches = 15

[tool.setuptools]
packages = ["social_core"]

[tool.tomlsort]
ignore_case = true
sort_inline_arrays = true
sort_inline_tables = true
sort_table_keys = true
spaces_before_inline_comment = 2
